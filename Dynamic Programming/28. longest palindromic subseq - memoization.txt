public int longestPalinSubseq(String s)
{
    //code here
    int[][] dp = new int[s.length()][s.length()];
    for(int i=0;i<s.length();i++){
        Arrays.fill(dp[i],-1);
    }
    return lpsUtil(s,0,s.length()-1,dp);
}
public int lpsUtil(String s,int i,int j,int[][] dp){
    if(dp[i][j]!=-1){
        return dp[i][j];
    }
    if(i==j-1){
        if(s.charAt(i)==s.charAt(j)){
            return dp[i][j]=2;
        }else{
            return dp[i][j]=1;
        }
    }
    if(i==j){
        return dp[i][j]=1;
    }
    if(i<j){
        if(s.charAt(i)==s.charAt(j)){
            return dp[i][j]=2 + lpsUtil(s,i+1,j-1,dp);
        }else{
            return dp[i][j]=Math.max(lpsUtil(s,i+1,j,dp),lpsUtil(s,i,j-1,dp));
        }
    }
    return dp[i][j]=0;
}