public int maximizeCuts(int n, int x, int y, int z)
    {
       //Your code here
       if(n==0){
           return 0;
       }
       if(n<0){
           return 0;
       }
       int[] dp = new int[n+1];
       Arrays.fill(dp,-1);
       dp[0]=0;
       int ans = util(n,x,y,z,dp);
       return ans<0?0:ans;
    }
    public int util(int n, int x, int y, int z,int[] dp){
       if(n==0){
           return 0;
       }
       
       if(dp[n]!=-1){
           return dp[n];
       }
       int a=Integer.MIN_VALUE,b=Integer.MIN_VALUE,c=Integer.MIN_VALUE;
       if(n>=x){
           a = util(n-x,x,y,z,dp);
       }
       if(n>=y){
           b = util(n-y,x,y,z,dp);
       }
       if(n>=z){
           c = util(n-z,x,y,z,dp);
       }
       
       return dp[n]=1+ Math.max(a,Math.max(b,c));
    }