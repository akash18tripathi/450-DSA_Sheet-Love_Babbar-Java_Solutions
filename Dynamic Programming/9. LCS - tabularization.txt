static int lcs(int x, int y, String s1, String s2)
    {
        // your code here
        if(x==0 || y==0){
            return 0;
        }
        int[][] dp = new int[x+1][y+1];
        for(int i=0;i<=x;i++){
            dp[i][0]=0;
        }
        for(int i=0;i<=y;i++){
            dp[0][i]=0;
        }
        for(int i=1;i<=x;i++){
            for(int j=1;j<=y;j++){
                if(s1.charAt(i-1)==s2.charAt(j-1)){
                    dp[i][j]=1+dp[i-1][j-1];
                }else{
                    dp[i][j]= Math.max(dp[i][j-1],dp[i-1][j]);
                }
            }
        }
        
        return dp[x][y];
    }




/* Printing LCS Extension



int i = m;
        int j = n;
        while (i > 0 && j > 0) {
            // If current character in X[] and Y are same,
            // then current character is part of LCS
            if (X.charAt(i - 1) == Y.charAt(j - 1)) {
                // Put current character in result
                lcs[index - 1] = X.charAt(i - 1);
 
                // reduce values of i, j and index
                i--;
                j--;
                index--;
            }
 
            // If not same, then find the larger of two and
            // go in the direction of larger value
            else if (L[i - 1][j] > L[i][j - 1])
                i--;
            else
                j--;
        }

*/