public static int [] minimumTime(int n,int m, int[][] edges) {
    // code here
    ArrayList<ArrayList<Integer>> graph = new ArrayList<>();
    for(int i=0;i<n;i++){
        graph.add(new ArrayList<>());
    }
    int[] indegree = new int[n];
    for(int[] e: edges){
        graph.get(e[0]-1).add(e[1]-1);
        indegree[e[1]-1]++;
    }
    int[] jobTime = new int[n];
    Queue<Integer> q = new LinkedList<>();
    for(int i=0;i<n;i++){
        if(indegree[i]==0){
            jobTime[i]=1;
            q.add(i);
        }
    }
    while(!q.isEmpty()){
        int t = q.poll();
        for(int e: graph.get(t)){
            indegree[e]--;
            if(indegree[e]==0){
                jobTime[e]=1+jobTime[t];
                q.add(e);
            }
        }
    }
    return jobTime;
}