public int numIslands(char[][] grid) {
        // Code here
        int n = grid.length;
        int m = grid[0].length;
        int[] xMoves={1,1,0,-1,-1,-1,0,1};
        int[] yMoves = {0,1,1,1,0,-1,-1,-1};
        int count=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]=='1'){
                    count++;
                    dfs(grid,i,j,n,m,xMoves,yMoves);
                }
            }
        }
        return count;
    }
    
    public void dfs(char[][] grid,int i,int j,int n,int m,int[] xMoves,int[] yMoves){
        if(i<0 || j<0 || i>=n || j>=m || grid[i][j]!='1' ){
            return;
        }
        grid[i][j]= '0';
        for(int k=0;k<8;k++){
            dfs(grid,i+xMoves[k],j+yMoves[k],n,m,xMoves,yMoves);
        }
        return;
    }