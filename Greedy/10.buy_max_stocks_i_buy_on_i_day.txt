    int buyMaximumProducts(int n, int k, int price[]){
        //Write your code here
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;
        for(int i=0;i<n;i++){
            pq.push({price[i],i+1});
        }
        int sum=0,stocks=0;
        while(!pq.empty() && sum<=k){
            pair<int,int> p =pq.top();
            pq.pop();
            if(sum + p.second*p.first <=k){
                stocks+=p.second;
                sum += p.second*p.first;
            }else{
                int nums = (k-sum)/p.first;
                stocks+= nums;
                sum += nums*p.first;
                break;
            }
        }
        return stocks;
    }

https://practice.geeksforgeeks.org/problems/buy-maximum-stocks-if-i-stocks-can-be-bought-on-i-th-day/1
